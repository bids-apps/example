---
version: 2.1

jobs:
  build:
    machine:
      # https://circleci.com/developer/machine/image/ubuntu-2204
      image: ubuntu-2204:2022.10.2

    steps:
    - checkout
    - restore_cache:
        keys:
        - my_cache

    - run:
        name: 'Get test data: ds114_test1'
        command: |
          if [[ ! -d ~/data/ds114_test1 ]]; then
            wget -c -O ${HOME}/ds114_test1.tar "https://osf.io/download/zerfq/" && \
            mkdir -p ${HOME}/data && \
            tar xf ${HOME}/ds114_test1.tar -C ${HOME}/data;
          fi
    - run:
        name: 'Get test data: ds114_test2'
        command: |
          if [[ ! -d ~/data/ds114_test2 ]]; then
            wget -c -O ${HOME}/ds114_test2.tar "https://osf.io/download/eg4ma/" && \
            mkdir -p ${HOME}/data && \
            tar xf ${HOME}/ds114_test2.tar -C ${HOME}/data;
          fi
    - run:
        name: Build Docker image
        command: |
          if [[ -e ~/docker/image.tar ]]; \
            then docker load -i ~/docker/image.tar;
          fi
          git describe --tags --always > version
          docker build -t bids/${CIRCLE_PROJECT_REPONAME,,} .
          mkdir -p ${HOME}/docker
          docker save "bids/${CIRCLE_PROJECT_REPONAME,,}" > ~/docker/image.tar

    - save_cache:
        key: my_cache
        paths:
        - ~/docker
        - ~/data

    - persist_to_workspace:
        root: /home/circleci
        paths:
        - data/ds114_test1
        - data/ds114_test2
        - docker/image.tar

  test:
    machine:
      image: ubuntu-2204:2022.10.2

    parameters:
      dataset:
        type: string

    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run: docker load -i /tmp/workspace/image.tar

    - run: mkdir -p ${HOME}/outputs<< parameters.dataset >>

    - run:
        name: print version
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v /tmp/workspace/data/ds114_test1:/bids_dataset \
              bids/${CIRCLE_PROJECT_REPONAME,,} --version

        # participant level tests for single session dataset
    - run:
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
            -v ${HOME}/outputs<< parameters.dataset >>:/outputs \
              bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs participant --participant_label 01
        no_output_timeout: 6h
    - run:
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
            -v ${HOME}/outputs<< parameters.dataset >>:/outputs \
              bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs participant --participant_label 02
        no_output_timeout: 6h

    - run:
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
            -v ${HOME}/outputs1:/outputs \
              bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs group
        no_output_timeout: 6h

    - store_artifacts:
        path: ~/output<< parameters.dataset >>

  deploy:

    machine:
      image: ubuntu-2204:2022.10.2

    steps:
    - attach_workspace:
        at: /tmp/workspace

    - run: docker load -i /tmp/workspace/docker/image.tar
    - run:
        name: push to dockerhub
        command: |
          docker login --username ${DOCKER_USER} --password ${DOCKER_PASS}
          docker push bids/${CIRCLE_PROJECT_REPONAME,,}:unstable
          if [[ -n "${CIRCLE_TAG}" ]]; then
            docker push bids/${CIRCLE_PROJECT_REPONAME,,}:latest
            docker tag bids/${CIRCLE_PROJECT_REPONAME,,} bids/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_TAG}
            docker push bids/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_TAG}
          fi

workflows:
  build-test-deploy:
    jobs:
    - build
    - test:
        requires:
        - build
        matrix:
          parameters:
            dataset: ['01', '02']
    - deploy:
        requires:
        - test
        filters:
          tags:
            only: /.*/

# VS Code Extension Version: 1.5.1
